#+title: Readel
#+author: EFLS
#+date: 2024

Readel is a basic retrieval system for Readeck annotations. It will
show or insert highlights (called "annotations" in Readeck) from a
selected article (called "bookmark") in Org-mode formatting.

Readeck is a self-hosted read-it-later system. See [[https://readeck.org][readeck.org]].

Typically, I'll use Readel like this:
 1. I'm reading a saved article in Readeck, and I want to save title,
    link and annotations to a note in Emacs.
 2. I tag the article "process" in Readeck.
 3. I create a new note in Emacs Org-mode.
 4. I call =readel-annotations-insert-from-bm= and select the article
    from the list, which inserts Org formatted annotations. Because
    =readel-bookmarks-label= is set to ="process"=, I can easily find the
    article.
 5. I modify the note to my liking and call
    =readel-remove-label-from-bm= to remove the temporary label from the
    article.


To use Readel, set the following parameters:

#+begin_src emacs-lisp
(setq readel-url "https://url.to.readeck"  ;; Readeck URL
      readel-token "abc123"                ;; Readeck API token
      readel-bookmarks-label "process")    ;; Label to filter bookmarks
#+end_src

Note:
 - Set =readel-bookmarks-label= to nil to disable filtering of
   bookmarks.
 - Make sure there is no trailing =/= in the =readel-url=.

Readel will retrieve and show highlights in Org-mode formatting.

Readel provides two user-facing functions:
- =readel-annotations-insert-from-bm= to select a bookmark and insert its
  annotations at point.
- =readel-annotations-buffer-render= to select a bookmark and display
  its annotations in a separate buffer.

Note: The code is very basic. Data is stored in alists as retrieved
from the server. The =request= code will wait until requests are
completed. There's no error handling involved.

But it does allow me to quickly get highlights from articles I've
saved into and read on Readeck, which is pretty useful.

Similar (but much more elaborate) projects for different types of
read-it-later services:
- [[https://github.com/Kungsgeten/hypothesis][Hypothesis.el]] for annotations on hypothes.is. I have used this for a long time, it's amazing to use when you annotate with [[https://hypothes.is/]].
- [[https://github.com/karthink/wombag][Wombag]] and [[https://github.com/chenyanming/wallabag.el][Wallabag.el]] for (much more extensive) integration with
  Wallabag. I really like Wombag, as it uses the elfeed interface to
  interact with stored articles.

